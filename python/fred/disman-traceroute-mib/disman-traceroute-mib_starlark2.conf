[[processors.starlark]]
# MIB filename - DISMAN-TRACEROUTE-MIB.txt
# MIB name - DISMAN-TRACEROUTE-MIB
source = '''
def apply(metric):

    #============= traceRoutePathChange ===============================
    if metric.tags["name"] == "traceRoutePathChange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("traceRouteCtlTargetAddressType")
        vb2 = metric.fields.get("traceRouteCtlTargetAddress")
        vb3 = metric.fields.get("traceRouteResultsIpTgtAddrType")
        vb4 = metric.fields.get("traceRouteResultsIpTgtAddr")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Distributed Management Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "The path to a target has changed."
        
    #============= traceRouteTestFailed ===============================
    if metric.tags["name"] == "traceRouteTestFailed":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("traceRouteCtlTargetAddressType")
        vb2 = metric.fields.get("traceRouteCtlTargetAddress")
        vb3 = metric.fields.get("traceRouteResultsIpTgtAddrType")
        vb4 = metric.fields.get("traceRouteResultsIpTgtAddr")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Distributed Management Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "Could not determine the path to a target."
        
    #============= traceRouteTestCompleted ===============================
    if metric.tags["name"] == "traceRouteTestCompleted":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("traceRouteCtlTargetAddressType")
        vb2 = metric.fields.get("traceRouteCtlTargetAddress")
        vb3 = metric.fields.get("traceRouteResultsIpTgtAddrType")
        vb4 = metric.fields.get("traceRouteResultsIpTgtAddr")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Distributed Management Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "The path to a target has just been determined."
        
    
    return metric 
'''