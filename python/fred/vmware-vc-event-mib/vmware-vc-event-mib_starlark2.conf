[[processors.starlark]]
# MIB filename - VMWARE-VC-EVENT-MIB.mib
# MIB name - VMWARE-VC-EVENT-MIB
source = '''
def apply(metric):

    #============= vpxdAlarm ===============================
    if metric.tags["name"] == "vpxdAlarm":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("vmwVpxdTrapType")
        vb2 = metric.fields.get("vmwVpxdHostName")
        vb3 = metric.fields.get("vmwVpxdVMName")
        vb4 = metric.fields.get("vmwVpxdOldStatus")
        vb5 = metric.fields.get("vmwVpxdNewStatus")
        vb6 = metric.fields.get("vmwVpxdObjValue")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "VMware Inc"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "This notification is sent on entity alarm state change by the vCenter Server SNMP agent.This information is also available through the vSphere client through the Alarms screenor through the Managed Object Browser(MOB) interface for alarms athttpsvCenter Server machine addressmobmoid=AlarmManager.Listing individual objects of a specific type or ID can be done through the PropertyCollector SDK API.See httpwww.vmware.comsupportdevelopervcsdkvisdk2xpubsReferenceGuidevmodl.query.PropertyCollector.htmlfor details."
        
    #============= vpxdDiagnostic ===============================
    if metric.tags["name"] == "vpxdDiagnostic":
        
        # There are no varbinds mapped for the trap.
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "VMware Inc"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "This notification is sent on starting or restarting vCenter Serveron requesting a test notification explicitly and can also beconfigured to be sent periodically at a specified time interval viavCenter Server configuration by the vCenter Server SNMP agent."
        
    #============= vpxdAlarmInfo ===============================
    if metric.tags["name"] == "vpxdAlarmInfo":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("vmwVpxdTargetObjType")
        vb2 = metric.fields.get("vmwVpxdOldStatus")
        vb3 = metric.fields.get("vmwVpxdNewStatus")
        vb4 = metric.fields.get("vmwVpxdObjValue")
        vb5 = metric.fields.get("vmwVpxdTargetObj")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "VMware Inc"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "This notification is sent on entity alarm state change by the vCenter Server SNMP agent.This information is also available through the vSphere client through the Alarms screenor through the Managed Object Browser(MOB) interface for alarms athttpsvCenter Server machine addressmobmoid=AlarmManager.Listing individual objects of a specific type or ID can be done through the PropertyCollector SDK API.See httpwww.vmware.comsupportdevelopervcsdkvisdk2xpubsReferenceGuidevmodl.query.PropertyCollector.htmlfor details."
        
    
    return metric 
'''