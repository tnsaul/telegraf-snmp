[[processors.starlark]]
# MIB filename - IF-MIB.txt
# MIB name - IF-MIB
source = '''
def apply(metric):

    #============= linkDown ===============================
    if metric.tags["name"] == "linkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("ifIndex")
        vb2 = metric.fields.get("ifAdminStatus")
        vb3 = metric.fields.get("ifOperStatus")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Interfaces MIB Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "A linkDown trap signifies that the SNMP entity acting inan agent role has detected that the ifOperStatus object forone of its communication links is about to enter the downstate from some other state (but not from the notPresentstate).  This other state is indicated by the included valueof ifOperStatus."
        
        return metric
    #============= linkUp ===============================
    if metric.tags["name"] == "linkUp":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("ifIndex")
        vb2 = metric.fields.get("ifAdminStatus")
        vb3 = metric.fields.get("ifOperStatus")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Interfaces MIB Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "A linkUp trap signifies that the SNMP entity acting in anagent role has detected that the ifOperStatus object forone of its communication links left the down state andtransitioned into some other state (but not into thenotPresent state).  This other state is indicated by theincluded value of ifOperStatus."
        
        return metric
    
    return metric 
'''