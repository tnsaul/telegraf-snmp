[[processors.starlark]]
# MIB filename - UCD-SNMP-MIB.txt
# MIB name - UCD-SNMP-MIB
source = '''
def apply(metric):

    #============= ucdStart ===============================
    if metric.tags["name"] == "ucdStart":
        
        # There are no varbinds mapped for the trap.
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "University of California Davis"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "This trap could in principle be sent when the agent start"
        
    #============= ucdShutdown ===============================
    if metric.tags["name"] == "ucdShutdown":
        
        # There are no varbinds mapped for the trap.
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "University of California Davis"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "This trap is sent when the agent terminates"
        
    
    return metric 
'''