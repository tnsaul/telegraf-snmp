[[processors.starlark]]
# MIB filename - BRIDGE-MIB.txt
# MIB name - BRIDGE-MIB
source = '''
def apply(metric):

    #============= newRoot ===============================
    if metric.tags["name"] == "newRoot":
        
        # There are no varbinds mapped for the trap.
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Bridge MIB Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "The newRoot trap indicates that the sending agent hasbecome the new root of the Spanning Tree the trap issent by a bridge soon after its election as the newroot e.g. upon expiration of the Topology Change Timerimmediately subsequent to its election.  Implementationof this trap is optional."
        
    #============= topologyChange ===============================
    if metric.tags["name"] == "topologyChange":
        
        # There are no varbinds mapped for the trap.
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF Bridge MIB Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "A topologyChange trap is sent by a bridge when any ofits configured ports transitions from the Learning stateto the Forwarding state or from the Forwarding state tothe Blocking state.  The trap is not sent if a newRoottrap is sent for the same transition.  Implementation ofthis trap is optional."
        
    
    return metric 
'''