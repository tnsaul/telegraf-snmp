[[processors.starlark]]
# MIB filename - RMON-MIB.txt
# MIB name - RMON-MIB
source = '''
def apply(metric):

    #============= risingAlarm ===============================
    if metric.tags["name"] == "risingAlarm":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("alarmIndex")
        vb2 = metric.fields.get("alarmVariable")
        vb3 = metric.fields.get("alarmSampleType")
        vb4 = metric.fields.get("alarmValue")
        vb5 = metric.fields.get("alarmRisingThreshold")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF RMON MIB Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "The SNMP trap that is generated when an alarmentry crosses its rising threshold and generatesan event that is configured for sending SNMPtraps."
        
        return metric
    #============= fallingAlarm ===============================
    if metric.tags["name"] == "fallingAlarm":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("alarmIndex")
        vb2 = metric.fields.get("alarmVariable")
        vb3 = metric.fields.get("alarmSampleType")
        vb4 = metric.fields.get("alarmValue")
        vb5 = metric.fields.get("alarmFallingThreshold")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "IETF RMON MIB Working Group"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "The SNMP trap that is generated when an alarmentry crosses its falling threshold and generatesan event that is configured for sending SNMPtraps."
        
        return metric
    
    return metric 
'''