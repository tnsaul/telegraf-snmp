[[processors.starlark]]
# MIB filename - S650ALARM.mib
# MIB name - S650ALARM
source = '''
def apply(metric):

    #============= enterWarmUpState ===============================
    if metric.tags["name"] == "enterWarmUpState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 1  Entered warmup state.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= enterFreeRunState ===============================
    if metric.tags["name"] == "enterFreeRunState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 2  Entered freerun state .It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= enterFastTrackState ===============================
    if metric.tags["name"] == "enterFastTrackState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 3  Entered fasttrack state.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= enterNormalTrackState ===============================
    if metric.tags["name"] == "enterNormalTrackState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 4  Entered normaltrack state.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= enterBridgeState ===============================
    if metric.tags["name"] == "enterBridgeState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 5  Entered bridge state.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number ."
        
    #============= enterHoldoverState ===============================
    if metric.tags["name"] == "enterHoldoverState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 6 Entered holdover state.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= enterHoldoverRecoveryState ===============================
    if metric.tags["name"] == "enterHoldoverRecoveryState":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 8  Entered holdover recovery state.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= powerUpFirstNormalTrack ===============================
    if metric.tags["name"] == "powerUpFirstNormalTrack":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 8  First Normaltrack since powerupIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputRefPoorQuality ===============================
    if metric.tags["name"] == "inputRefPoorQuality":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 21  Input reference poor quality.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= channelTimeQualified ===============================
    if metric.tags["name"] == "channelTimeQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 22  Channel Time Qualified.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= channelFreqQualified ===============================
    if metric.tags["name"] == "channelFreqQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 23  Channel Frequency Qualifed.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputSelectAsTimeRef ===============================
    if metric.tags["name"] == "inputSelectAsTimeRef":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 24  Input selected as time refereence.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputSelectAsFreqRef ===============================
    if metric.tags["name"] == "inputSelectAsFreqRef":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 25  Input selected as frequency reference.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputAIS ===============================
    if metric.tags["name"] == "inputAIS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 27  Input Alarm Indication Signal (AIS).It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputOOF ===============================
    if metric.tags["name"] == "inputOOF":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 28  Input Out of Frame (OOF).It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputCRCError ===============================
    if metric.tags["name"] == "inputCRCError":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 29  Input CRC Error.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputBPV ===============================
    if metric.tags["name"] == "inputBPV":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 30  Input Bipolar Violation (BPV).It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputFrequencyError ===============================
    if metric.tags["name"] == "inputFrequencyError":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 31  Input Frequency Error.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= inputSSMChanged ===============================
    if metric.tags["name"] == "inputSSMChanged":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 32  Input SSM Changed.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssTimeQualified ===============================
    if metric.tags["name"] == "gnssTimeQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 33  GNSS Time Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpTimeQualified ===============================
    if metric.tags["name"] == "ntpTimeQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 34  NTP Time Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpTimeQualified ===============================
    if metric.tags["name"] == "ptpTimeQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 35  PTP Time Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1ATimeQualified ===============================
    if metric.tags["name"] == "j1ATimeQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 36  J1A Time Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1BTimeQualified ===============================
    if metric.tags["name"] == "j1BTimeQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 37  J1B Time Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssFrequencyQualified ===============================
    if metric.tags["name"] == "gnssFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 40  GNSS Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpFrequencyQualified ===============================
    if metric.tags["name"] == "ntpFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 41  NTP Frequency Qualified.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpFrequencyQualified ===============================
    if metric.tags["name"] == "ptpFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 42  PTP Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1AFrequencyQualified ===============================
    if metric.tags["name"] == "j1AFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 43  J1A Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1BFrequencyQualified ===============================
    if metric.tags["name"] == "j1BFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 44  J1B Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j2AFrequencyQualified ===============================
    if metric.tags["name"] == "j2AFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 45  J2A Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j2BFrequencyQualified ===============================
    if metric.tags["name"] == "j2BFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 46  J2B Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j7AFrequencyQualified ===============================
    if metric.tags["name"] == "j7AFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 47  J7A Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j7BFrequencyQualified ===============================
    if metric.tags["name"] == "j7BFrequencyQualified":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 48  J7B Frequency Qualified.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= incompatibleTransport ===============================
    if metric.tags["name"] == "incompatibleTransport":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 51  Incompatible Transport.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpInputChange ===============================
    if metric.tags["name"] == "ptpInputChange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 52  PTP Input Change.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpMasterSwitched ===============================
    if metric.tags["name"] == "ptpMasterSwitched":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 53  PTP Master Switched.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpInputNotTraceable ===============================
    if metric.tags["name"] == "ptpInputNotTraceable":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 54  PTP Input Not Traceable.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpClientLimit ===============================
    if metric.tags["name"] == "ptpClientLimit":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 71  PTP Client Limit.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpClientDrop ===============================
    if metric.tags["name"] == "ptpClientDrop":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 72  PTP Client Drop.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpClientAdd ===============================
    if metric.tags["name"] == "ptpClientAdd":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 73  PTP Client Add.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpClientListRefreshed ===============================
    if metric.tags["name"] == "ptpClientListRefreshed":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 74  PTP Client List Refreshed.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpPortStateDisabled ===============================
    if metric.tags["name"] == "ptpPortStateDisabled":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 75  PTP PortState DisabledIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpPortStateListening ===============================
    if metric.tags["name"] == "ptpPortStateListening":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 76  PTP PortState ListeningIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpPortStateMaster ===============================
    if metric.tags["name"] == "ptpPortStateMaster":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 77  PTP PortState MasterIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ptpPortStatePassive ===============================
    if metric.tags["name"] == "ptpPortStatePassive":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 78  PTP PortState PassiveIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssReceiverCommFailed ===============================
    if metric.tags["name"] == "gnssReceiverCommFailed":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 91  GNSS receiver communication failed.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssNotTracking ===============================
    if metric.tags["name"] == "gnssNotTracking":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 92  GNSS is not tracking.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssSignalLow ===============================
    if metric.tags["name"] == "gnssSignalLow":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 93  GNSS Signal Low.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssVoltageOutOfRange ===============================
    if metric.tags["name"] == "gnssVoltageOutOfRange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 94  GNSS Voltage out of range.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssCurrentOutOfRange ===============================
    if metric.tags["name"] == "gnssCurrentOutOfRange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 95  GNSS Current out of Range.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssAntCurrentShortCircuit ===============================
    if metric.tags["name"] == "gnssAntCurrentShortCircuit":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 96  GNSS antenna current short circuuitIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssAntCurrentOpenCircuit ===============================
    if metric.tags["name"] == "gnssAntCurrentOpenCircuit":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 97  GNSS antenna current open circuit.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= gnssInputLOS ===============================
    if metric.tags["name"] == "gnssInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 98  GNSS Input LOS.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1AInputLOS ===============================
    if metric.tags["name"] == "j1AInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 99  J1A Input LOS.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1BInputLOS ===============================
    if metric.tags["name"] == "j1BInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 100  J1B Input LOS.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j2AInputLOS ===============================
    if metric.tags["name"] == "j2AInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 101  J2A Input LOSIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j2BInputLOS ===============================
    if metric.tags["name"] == "j2BInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 102  J2B Input LOS.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j7AInputLOS ===============================
    if metric.tags["name"] == "j7AInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 103  J7A Input LOS.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j7BInputLOS ===============================
    if metric.tags["name"] == "j7BInputLOS":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 104  J7B Input LOS.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= excessiveTrafficOnEthPort ===============================
    if metric.tags["name"] == "excessiveTrafficOnEthPort":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 112  Excessive traffic on Ethernet port.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= syncEEthernetConfig ===============================
    if metric.tags["name"] == "syncEEthernetConfig":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 114  SYNCE Ethernet config.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ethLAN1LinkDown ===============================
    if metric.tags["name"] == "ethLAN1LinkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 115  Ethernet LAN1 link down.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ethLAN2LinkDown ===============================
    if metric.tags["name"] == "ethLAN2LinkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 116  Ethernet LAN2 link down.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ethLAN3LinkDown ===============================
    if metric.tags["name"] == "ethLAN3LinkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 117  Ethernet LAN3 link down.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ethLAN4LinkDown ===============================
    if metric.tags["name"] == "ethLAN4LinkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 118  Ethernet LAN4 link down.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ethLAN5LinkDown ===============================
    if metric.tags["name"] == "ethLAN5LinkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 119  Ethernet LAN5 link down.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ethLAN6LinkDown ===============================
    if metric.tags["name"] == "ethLAN6LinkDown":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 120  Ethernet LAN6 link down.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= serviceLoadLimitExceeded ===============================
    if metric.tags["name"] == "serviceLoadLimitExceeded":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 130  service load limit exceeded.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= powerOutOfRange ===============================
    if metric.tags["name"] == "powerOutOfRange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "Alarm 131  Power out of range.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= operationalFailure ===============================
    if metric.tags["name"] == "operationalFailure":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 132  Operational failure.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= batteryAFailure ===============================
    if metric.tags["name"] == "batteryAFailure":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 133  battery A failure.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= batteryBFailure ===============================
    if metric.tags["name"] == "batteryBFailure":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 134  battery B failure.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= systemFPGAFailure ===============================
    if metric.tags["name"] == "systemFPGAFailure":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 135  FPGA failure.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= flashPartitionFailure ===============================
    if metric.tags["name"] == "flashPartitionFailure":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 136  Flash Partition failure.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= synthUnlock ===============================
    if metric.tags["name"] == "synthUnlock":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 137  Synthesizer Unlock.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= rubidiumPPLUnlock ===============================
    if metric.tags["name"] == "rubidiumPPLUnlock":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 138  Rubidium PPL unlock.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= temperatureOutOfRange ===============================
    if metric.tags["name"] == "temperatureOutOfRange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 139  Temperature out of range.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= fanFailure ===============================
    if metric.tags["name"] == "fanFailure":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 140  Fan Failure.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= productionConfigDataError ===============================
    if metric.tags["name"] == "productionConfigDataError":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 151 production configuration data error.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= timeLineChanged ===============================
    if metric.tags["name"] == "timeLineChanged":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 152  Time line has been changed.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= phaseChanged ===============================
    if metric.tags["name"] == "phaseChanged":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 153  Phase has been changed.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= sysLogTimeUpdate ===============================
    if metric.tags["name"] == "sysLogTimeUpdate":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 154  system log time updated.This event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= s650SystemReboot ===============================
    if metric.tags["name"] == "s650SystemReboot":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 155  System rebootIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= timeQL1eM6 ===============================
    if metric.tags["name"] == "timeQL1eM6":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 156  time QL1eM6It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= timeQL1eM5 ===============================
    if metric.tags["name"] == "timeQL1eM5":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 158  Time QL1eM5It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= timeQL1eM4 ===============================
    if metric.tags["name"] == "timeQL1eM4":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 159  Time QL1eM5It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= timeQL1eM3 ===============================
    if metric.tags["name"] == "timeQL1eM3":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 160  Time QL1eM5It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpSysPeerChanged ===============================
    if metric.tags["name"] == "ntpSysPeerChanged":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 161  NTP system peer changeIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpStratumChanged ===============================
    if metric.tags["name"] == "ntpStratumChanged":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 162  NTP Stratum ChangedIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpLeapChange ===============================
    if metric.tags["name"] == "ntpLeapChange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 163  NTP Leap indicator ChangedIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= sysUpgradeAvailable ===============================
    if metric.tags["name"] == "sysUpgradeAvailable":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 164  System upgrade availableIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1AIrigInputFault ===============================
    if metric.tags["name"] == "j1AIrigInputFault":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 170  J1A IRIG Input faultIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= j1BIrigInputFault ===============================
    if metric.tags["name"] == "j1BIrigInputFault":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 171  J1B IRIG input protocal faultIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= holdoverTimeExceed ===============================
    if metric.tags["name"] == "holdoverTimeExceed":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 172  Holdover Time Error Estimate ExceedIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= leapPending ===============================
    if metric.tags["name"] == "leapPending":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 173  Leap Event PendingIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= excessiveFreqAdjust ===============================
    if metric.tags["name"] == "excessiveFreqAdjust":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 174  Excessive Frequency AdjustIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= acPowerNotPresent ===============================
    if metric.tags["name"] == "acPowerNotPresent":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 175  Power Not Present0=AC1 1=AC2 2=DC1 3=DC2It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= fullSysConfig ===============================
    if metric.tags["name"] == "fullSysConfig":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 176  Full system Configuration occuredIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= configChange ===============================
    if metric.tags["name"] == "configChange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 177  Configuration changeIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= loginActivity ===============================
    if metric.tags["name"] == "loginActivity":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 178  login activityThis event is reserved and presently not used.It contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= lpnOscillatorUnlock ===============================
    if metric.tags["name"] == "lpnOscillatorUnlock":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 179  LPN Oscillator UnlockIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= manualTimeEntryModeEnabled ===============================
    if metric.tags["name"] == "manualTimeEntryModeEnabled":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 180  manual TimeEntry Mode EnabledIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= lpnOscillatorStateChange ===============================
    if metric.tags["name"] == "lpnOscillatorStateChange":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 181  LPN Oscillator State ChangeIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpReflectorStatePassive ===============================
    if metric.tags["name"] == "ntpReflectorStatePassive":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 182  NTP Reflector State Change PassiveIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= ntpReflectorStateServer ===============================
    if metric.tags["name"] == "ntpReflectorStateServer":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 183  NTP Reflector State Change ServerIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    #============= eventOverflow ===============================
    if metric.tags["name"] == "eventOverflow":
        
        # The following are the varbind mappings from the trap.    
        vb1 = metric.fields.get("s650NotifyAlarmEventID")
        vb2 = metric.fields.get("s650NotifyAlarmAction")
        vb3 = metric.fields.get("s650NotifyIndex")
        vb4 = metric.fields.get("s650NotifySeverity")
        vb5 = metric.fields.get("s650NotifyDateTime")
        vb6 = metric.fields.get("s650NotifyDescription")
        vb7 = metric.fields.get("s650NotifySequenceNum")
        
        

        # Adapt the following code to suit the individual Notification.
        metric.fields["agent"] = metric.tags["mib"]
        metric.fields["alertgroup"] = metric.tags["name"]
        metric.fields["alertkey"] = ""
        metric.fields["class"] = "Microsemi"
        metric.fields["eventid"] = ""
        metric.fields["firstoccurence"] = ""
        metric.fields["fqdn"] = ""
        metric.fields["node"] = metric.tags["source"]
        metric.fields["severity"] = ""
        metric.fields["summary"] = "AlarmEvent 183  Event OverflowIt contains the OID and value for alarm ID notify index severity transient date and time severity descriptions and sequence number."
        
    
    return metric 
'''